ItemGroupContent:
    type: object
    inherits:
        - DomainContentTypeGroup
    config:
        fields:
            _types:
                type: ItemGroupContentTypes
                resolve: {  }
            articles:
                type: ArticleItemConnection
                description: 'No description available'
                resolve: '@=resolver("ItemsOfTypeAsConnection", ["article", args])'
                argsBuilder: 'Relay::Connection'
                args:
                    query: { type: ContentSearchQuery, description: 'A Content query used to filter results' }
                    sortBy: { type: '[SortByOptions]', description: 'A Sort Clause, or array of Clauses. Add _desc after a Clause to reverse it' }
            article:
                type: ArticleItem
                description: 'No description available'
                resolve: '@=resolver("ItemOfType", [args, "article"])'
                args:
                    contentId: { type: Int, description: 'Content ID of the article' }
                    remoteId: { type: String, description: 'Content remote ID of the article' }
                    locationId: { type: Int, description: 'Location ID of the article' }
                    locationRemoteId: { type: String, description: 'Location remote ID of the article' }
                    urlAlias: { type: String, description: 'URL alias of the article' }
            folders:
                type: FolderItemConnection
                description: 'No description available'
                resolve: '@=resolver("ItemsOfTypeAsConnection", ["folder", args])'
                argsBuilder: 'Relay::Connection'
                args:
                    query: { type: ContentSearchQuery, description: 'A Content query used to filter results' }
                    sortBy: { type: '[SortByOptions]', description: 'A Sort Clause, or array of Clauses. Add _desc after a Clause to reverse it' }
            folder:
                type: FolderItem
                description: 'No description available'
                resolve: '@=resolver("ItemOfType", [args, "folder"])'
                args:
                    contentId: { type: Int, description: 'Content ID of the folder' }
                    remoteId: { type: String, description: 'Content remote ID of the folder' }
                    locationId: { type: Int, description: 'Location ID of the folder' }
                    locationRemoteId: { type: String, description: 'Location remote ID of the folder' }
                    urlAlias: { type: String, description: 'URL alias of the folder' }
            tags:
                type: TagItemConnection
                description: 'No description available'
                resolve: '@=resolver("ItemsOfTypeAsConnection", ["tag", args])'
                argsBuilder: 'Relay::Connection'
                args:
                    query: { type: ContentSearchQuery, description: 'A Content query used to filter results' }
                    sortBy: { type: '[SortByOptions]', description: 'A Sort Clause, or array of Clauses. Add _desc after a Clause to reverse it' }
            tag:
                type: TagItem
                description: 'No description available'
                resolve: '@=resolver("ItemOfType", [args, "tag"])'
                args:
                    contentId: { type: Int, description: 'Content ID of the tag' }
                    remoteId: { type: String, description: 'Content remote ID of the tag' }
                    locationId: { type: Int, description: 'Location ID of the tag' }
                    locationRemoteId: { type: String, description: 'Location remote ID of the tag' }
                    urlAlias: { type: String, description: 'URL alias of the tag' }
            productCategoryTags:
                type: ProductCategoryTagItemConnection
                description: 'No description available'
                resolve: '@=resolver("ItemsOfTypeAsConnection", ["product_category_tag", args])'
                argsBuilder: 'Relay::Connection'
                args:
                    query: { type: ContentSearchQuery, description: 'A Content query used to filter results' }
                    sortBy: { type: '[SortByOptions]', description: 'A Sort Clause, or array of Clauses. Add _desc after a Clause to reverse it' }
            productCategoryTag:
                type: ProductCategoryTagItem
                description: 'No description available'
                resolve: '@=resolver("ItemOfType", [args, "product_category_tag"])'
                args:
                    contentId: { type: Int, description: 'Content ID of the product_category_tag' }
                    remoteId: { type: String, description: 'Content remote ID of the product_category_tag' }
                    locationId: { type: Int, description: 'Location ID of the product_category_tag' }
                    locationRemoteId: { type: String, description: 'Location remote ID of the product_category_tag' }
                    urlAlias: { type: String, description: 'URL alias of the product_category_tag' }
